import telebot
from telebot import types
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

BOT_TOKEN = '6565093408:AAGIcEAhweOQO5mEWS8QWujfxbYhawdIqKo'
MONGO_URL = "mongodb+srv://CinemaPflofif:LzsOTdMmsFBiaovB@cluster0.oadkx5w.mongodb.net/?retryWrites=true&w=majority"
bot = telebot.TeleBot(BOT_TOKEN)

client = MongoClient(MONGO_URL, server_api=ServerApi('1'))
db = client["BTW_XII"]
collection = db["users"]


class User:
    def __init__(self, name=None, department=None, course=None, phone=None, isVisitBefore=None, chat_id=None):
        self.name = name
        self.department = department
        self.course = course
        self.phone = phone
        self.isVisitBefore = isVisitBefore
        self.chat_id = chat_id


user = User()


@bot.message_handler(commands=['start'])
def ask_name(message):
    user.chat_id = message.chat.id
    about_btw = "–©–æ –∂ —Ç–∞–∫–µ —Ü–µ BTW?\n\nBEST Training Week ‚Äî —Ü–µ —Ç–∏–∂–¥–µ–Ω—å —Ç—Ä–µ–Ω—ñ–Ω–≥—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö, —Ö—Ç–æ –ø—Ä–∞–≥–Ω–µ —Ä–æ–∑–≤–∏–≤–∞—Ç–∏—Å—è —Ç–∞ –≤–¥–æ—Å–∫–æ–Ω–∞–ª—é–≤–∞—Ç–∏ —Å–≤–æ—ó –Ω–∞–≤–∏—á–∫–∏. –ù–∞—à—ñ —Å–ø—ñ–∫–µ—Ä–∏ –ø–æ–≥–æ–≤–æ—Ä—è—Ç—å –ø—Ä–æ —Ä—ñ–∑–Ω—ñ —Ç–µ–º–∏, —Ç–∞–∫—ñ —è–∫ –æ—Å–æ–±–∏—Å—Ç–∏–π –±—Ä–µ–Ω–¥ IT, –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—é, –ø–æ–¥–æ—Ä–æ–∂—ñ —Ç–∞ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ. –¶–µ —É–Ω—ñ–∫–∞–ª—å–Ω–∞ –Ω–∞–≥–æ–¥–∞ –≤–∏–≤—á–∏—Ç–∏ –Ω–æ–≤–µ —ñ –∑–Ω–∞–π—Ç–∏ —Å–ø—ñ–ª—å–Ω–æ—Ç—É –æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–æ—Å—Ç–∞, –∞ –¥–æ—Å—Ç—É–ø –¥–æ –∑–Ω–∞–Ω—å ‚Äî –±–µ–∑–ø–ª–∞—Ç–Ω–∏–π."
    bot.send_message(message.chat.id, about_btw)

    text = '–•–æ—á–µ–º–æ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Ç–µ–ø–µ—Ä —Ç—Ä–æ—Ö–∏ –±—ñ–ª—å—à–µ –ø—Ä–æ —Ç–µ–±–µ. –ü–æ—á–Ω—ñ–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é!\n –Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?'
    sent_msg = bot.send_message(message.chat.id, text, parse_mode="Markdown")
    bot.register_next_step_handler(sent_msg, ask_department)


@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–æ–∑–∫–ª–∞–¥')
def send_schedule(message):
    with open('schedule_text.txt', 'r', encoding='utf-8') as file:
        text = file.read()

    schedule_text = text.split('\n\n\n')

    for paragraph in schedule_text:
        bot.send_message(message.chat.id, paragraph)


def ask_department(message):
    user.name = message.text

    text = "–ù–∞ —è–∫–æ–º—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ñ —Ç–∏ –Ω–∞–≤—á–∞—î—à—Å—è?"

    sent_msg = bot.send_message(
        message.chat.id, text, parse_mode="Markdown")
    bot.register_next_step_handler(sent_msg, ask_course)


def ask_course(message):
    user.department = message.text

    text = '–Ø–∫–∏–π —Ç–∏ –∫—É—Ä—Å?'
    keyboard = ["–ë–∞–∫–∞–ª–∞–≤—Ä 1",
                "–ë–∞–∫–∞–ª–∞–≤—Ä 2",
                "–ë–∞–∫–∞–ª–∞–≤—Ä 3",
                "–ë–∞–∫–∞–ª–∞–≤—Ä 4",
                "–ú–∞–≥—ñ—Å—Ç—Ä 1",
                "–ú–∞–≥—ñ—Å—Ç—Ä 2"]

    sent_msg = send_message_with_reply_keyboard(
        message.chat.id, text, keyboard)
    bot.register_next_step_handler(sent_msg, ask_phone)


def ask_phone(message):
    user.course = message.text
    text = '–ü–æ–¥—ñ–ª–∏—Å—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É'

    sent_msg = bot.send_message(
        message.chat.id, text, parse_mode="Markdown")
    bot.register_next_step_handler(sent_msg, ask_visiting_of_prev_btw)


def ask_visiting_of_prev_btw(message):
    user.phone = message.text

    text = '–†–æ–∑–∫–∞–∂–∏, —á–∏ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–≤/–ª–∞ —Ç–∏ BTW —Ä–∞–Ω—ñ—à–µ?'

    keyboard = ["–¢–∞–∫, BTW IX –∞–±–æ —Ä–∞–Ω—ñ—à–µ",
                "–¢–∞–∫, BTW X",
                "–¢–∞–∫, BTW XI",
                "–ë—É–¥–µ –≤–ø–µ—Ä—à–µ",]

    sent_msg = send_message_with_reply_keyboard(
        message.chat.id, text, keyboard)
    bot.register_next_step_handler(sent_msg, ask_is_confirm)


def ask_is_confirm(message):
    user.isVisitBefore = message.text
    text = '–î—è–∫—É—é! –Ü –æ—Å—Ç–∞–Ω–Ω—î, –¥—É–∂–µ –≤–∞–∂–ª–∏–≤–µ. –¶—ñ—î—é –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é, —â–æ –Ω–∞–¥–∞–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —î –¥–æ—Å—Ç–æ–≤—ñ—Ä–Ω–æ—é, –¥–∞—é –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö, –≤–∫–∞–∑–∞–Ω–∏—Ö —É –±–æ—Ç—ñ, –¥–∞—é –¥–æ–∑–≤—ñ–ª –Ω–∞ —Ñ–æ—Ç–æ- —Ç–∞ –≤—ñ–¥–µ–æ–∑–π–æ–º–∫—É –ø—ñ–¥ —á–∞—Å –ø—Ä–æ—î–∫—Ç—É —ñ –∑–æ–±–æ–≤‚Äô—è–∑—É—é—Å—å –¥–æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏—Å—å –≤—Å—ñ—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ –±–µ–∑–ø–µ–∫–∏.'

    keyboard = ["–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é!"]

    sent_msg = send_message_with_reply_keyboard(
        message.chat.id, text, keyboard)
    bot.register_next_step_handler(sent_msg, confirm_handler)


def confirm_handler(message):
    text = "–°—É–ø–µ—Ä! –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ß–µ–∫–∞—î–º–æ —Ç–µ–±–µ –Ω–∞ BTW –∑ 18-22 –≤–µ—Ä–µ—Å–Ω—è!ü•∞"

    keyboard = ["–†–æ–∑–∫–ª–∞–¥", "–°–ø—ñ–∫–µ—Ä–∏"]

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(keyboard)
    bot.send_message(
        message.chat.id, text, parse_mode="Markdown", reply_markup=markup)

    try:
        collection.insert_one(user.__dict__)
    except Exception as e:
        print(str(e))


def send_message_with_reply_keyboard(chat_id, text, keyboard):
    markup = types.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True)
    markup.add(*keyboard)
    sent_msg = bot.send_message(
        chat_id, text, parse_mode="Markdown", reply_markup=markup)
    return sent_msg


bot.infinity_polling()
